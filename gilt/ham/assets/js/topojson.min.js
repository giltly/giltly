topojson=function(){function n(d,e){var b={},a={};e.forEach(function(j){var k=f(j),h=k[0],i=k[1],c,d;if(c=a[h]){delete a[c.end];c.push(j);c.end=i;if(d=b[i]){delete b[d.start];var e=d===c?c:c.concat(d);b[e.start=c.start]=a[e.end=d.end]=e}else if(d=a[i]){delete b[d.start];delete a[d.end];var e=c.concat(d.map(function(a){return~a}).reverse());b[e.start=c.start]=a[e.end=d.start]=e}else b[c.start]=a[c.end]=c}else if(c=b[i]){delete b[c.start];c.unshift(j);c.start=h;if(d=a[h]){delete a[d.end];var g=d===c?c:d.concat(c);b[g.start=d.start]=a[g.end=c.end]=g}else if(d=b[h]){delete b[d.start];delete a[d.end];var g=d.map(function(a){return~a}).reverse().concat(c);b[g.start=d.end]=a[g.end=c.end]=g}else b[c.start]=a[c.end]=c}else if(c=b[h]){delete b[c.start];c.unshift(~j);c.start=i;if(d=a[i]){delete a[d.end];var g=d===c?c:d.concat(c);b[g.start=d.start]=a[g.end=c.end]=g}else if(d=b[i]){delete b[d.start];delete a[d.end];var g=d.map(function(a){return~a}).reverse().concat(c);b[g.start=d.end]=a[g.end=c.end]=g}else b[c.start]=a[c.end]=c}else if(c=a[i]){delete a[c.end];c.push(~j);c.end=h;if(d=a[h]){delete b[d.start];var e=d===c?c:c.concat(d);b[e.start=c.start]=a[e.end=d.end]=e}else if(d=b[h]){delete b[d.start];delete a[d.end];var e=c.concat(d.map(function(a){return~a}).reverse());b[e.start=c.start]=a[e.end=d.start]=e}else b[c.start]=a[c.end]=c}else{c=[j];b[c.start=h]=a[c.end=i]=c}});function f(e){var b=d.arcs[e],c=b[0],a=[0,0];b.forEach(function(b){a[0]+=b[0],a[1]+=b[1]});return[c,a]}var c=[];for(var g in a)c.push(a[g]);return c}function o(c,o,k){var a=[];if(arguments.length>1){var b=[],i;function l(a){if(a<0)a=~a;(b[a]||(b[a]=[])).push(i)}function j(a){a.forEach(l)}function e(a){a.forEach(j)}function h(a){if(a.type==="GeometryCollection")a.geometries.forEach(h);else if(a.type in g){i=a;g[a.type](a.arcs)}}var g={LineString:j,MultiLineString:e,Polygon:e,MultiPolygon:function(a){a.forEach(e)}};h(o);b.forEach(arguments.length<3?function(c,b){a.push(b)}:function(b,c){k(b[0],b[b.length-1])&&a.push(c)})}else for(var f=0,m=c.arcs.length;f<m;++f)a.push(f);return d(c,{type:"MultiLineString",arcs:n(c,a)})}function f(c,a){return a.type==="GeometryCollection"?{type:"FeatureCollection",features:a.geometries.map(function(a){return b(c,a)})}:b(c,a)}function b(c,a){var b={type:"Feature",id:a.id,properties:a.properties||{},geometry:d(c,a)};if(a.id==null)delete b.id;return b}function d(f,l){var d=a(f.transform),i=f.arcs;function k(b,a){a.length&&a.pop();for(var e=i[b<0?~b:b],c=0,f=e.length,g;c<f;++c){a.push(g=e[c].slice());d(g,c)}b<0&&m(a,f)}function h(a){a=a.slice();d(a,0);return a}function b(c){for(var a=[],b=0,d=c.length;b<d;++b)k(c[b],a);a.length<2&&a.push(a[0].slice());return a}function j(c){var a=b(c);while(a.length<4)a.push(a[0].slice());return a}function g(a){return a.map(j)}function e(b){var a=b.type;return a==="GeometryCollection"?{type:a,geometries:b.geometries.map(e)}:a in c?{type:a,coordinates:c[a](b)}:null}var c={Point:function(a){return h(a.coordinates)},MultiPoint:function(a){return a.coordinates.map(h)},LineString:function(a){return b(a.arcs)},MultiLineString:function(a){return a.arcs.map(b)},Polygon:function(a){return g(a.arcs)},MultiPolygon:function(a){return a.arcs.map(g)}};return e(l)}function m(a,e){var d,b=a.length,c=b-e;while(c<--b)d=a[c],a[c++]=a[b],a[b]=d}function c(d,e){var a=0,c=d.length;while(a<c){var b=a+c>>>1;if(d[b]<e)a=b+1;else c=b}return a}function k(n){var d={},h=n.map(function(){return[]});function o(b,a){b.forEach(function(b){if(b<0)b=~b;var c=d[b];if(c)c.push(a);else d[b]=[a]})}function j(a,b){a.forEach(function(a){o(a,b)})}function m(a,b){if(a.type==="GeometryCollection")a.geometries.forEach(function(a){m(a,b)});else a.type in l&&l[a.type](a.arcs,b)}var l={LineString:o,MultiLineString:j,Polygon:j,MultiPolygon:function(a,b){a.forEach(function(a){j(a,b)})}};n.forEach(m);for(var b in d)for(var i=d[b],p=i.length,g=0;g<p;++g)for(var k=g+1;k<p;++k){var e=i[g],f=i[k],a;(a=h[e])[b=c(a,f)]!==f&&a.splice(b,0,f);(a=h[f])[b=c(a,e)]!==e&&a.splice(b,0,e)}return h}function j(d,f){var n=a(d.transform),o=g(d.transform),j=l(i),k=0,b;if(!f)f=h;d.arcs.forEach(function(d){var c=[];d.forEach(n);for(var a=1,e=d.length-1;a<e;++a){b=d.slice(a-1,a+2);b[1][2]=f(b);c.push(b);j.push(b)}d[0][2]=d[e][2]=Infinity;for(var a=0,e=c.length;a<e;++a){b=c[a];b.previous=c[a-1];b.next=c[a+1]}});while(b=j.pop()){var c=b.previous,e=b.next;if(b[1][2]<k)b[1][2]=k;else k=b[1][2];if(c){c.next=e;c[2]=b[2];m(c)}if(e){e.previous=c;e[0]=b[0];m(e)}}d.arcs.forEach(function(a){a.forEach(o)});function m(a){j.remove(a);a[1][2]=f(a);j.push(a)}return d}function h(a){return Math.abs((a[0][0]-a[2][0])*(a[1][1]-a[0][1])-(a[0][0]-a[1][0])*(a[2][1]-a[0][1]))}function i(a,b){return a[1][2]-b[1][2]}function l(b){var c={},a=[];c.push=function(){for(var b=0,d=arguments.length;b<d;++b){var c=arguments[b];e(c.index=a.push(c)-1)}return a.length};c.pop=function(){var c=a[0],b=a.pop();if(a.length){a[b.index=0]=b;d(0)}return c};c.remove=function(g){var c=g.index,f=a.pop();if(c!==a.length){a[f.index=c]=f;(b(f,g)<0?e:d)(c)}return c};function e(c){var d=a[c];while(c>0){var f=(c+1>>1)-1,e=a[f];if(b(d,e)>=0)break;a[e.index=c]=e;a[d.index=c=f]=d}}function d(d){var h=a[d];while(true){var f=d+1<<1,g=f-1,e=d,c=a[e];if(g<a.length&&b(a[g],c)<0)c=a[e=g];if(f<a.length&&b(a[f],c)<0)c=a[e=f];if(e===d)break;a[c.index=d]=c;a[h.index=d=e]=h}}return c}function a(a){if(!a)return e;var b,c,g=a.scale[0],h=a.scale[1],d=a.translate[0],f=a.translate[1];return function(a,e){if(!e)b=c=0;a[0]=(b+=a[0])*g+d;a[1]=(c+=a[1])*h+f}}function g(a){if(!a)return e;var b,c,g=a.scale[0],h=a.scale[1],d=a.translate[0],f=a.translate[1];return function(a,j){if(!j)b=c=0;var e=(a[0]-d)/g|0,i=(a[1]-f)/h|0;a[0]=e-b;a[1]=i-c;b=e;c=i}}function e(){}return{version:"1.4.3",mesh:o,feature:f,neighbors:k,presimplify:j}}();