@Master['master.sshtml']

@Section['Content']

<div id="UserPassId" class="UserProfile">
    <form action="/Users/Password/Update" method="post" >
        <fieldset>
            <legend>Change Password</legend>        
			<lable>Old Password</lable>
            <div class="input-control password"  >
                <input placeholder="Current Password" type="password" data-bind="value: EditingModel().Password" name="Password"/>                
                <button class="btn-reveal"></button>
            </div>
			<lable>New Password</lable>
            <div class="input-control password"  >
                <input placeholder="Password" type="password" data-bind="value: EditingModel().Password1, changedCss: 'dirty'" name="Password1"/>                            
                <button class="btn-reveal"></button>
            </div>
			<lable>New Password - Confirm</lable>
            <div class="input-control password"  >
                <input placeholder="Password" type="password" data-bind="value: EditingModel().Password2, changedCss: 'dirty'"  name="Password2"/>                  
                <button class="btn-reveal"></button>
            </div>
            <input value="Submit" type="submit" data-bind="enable: EditingModel().hasChanges">
            <input type="button" value="Reset" data-bind="click:  $root.Cancel, enable: EditingModel().hasChanges"/>
        </fieldset>
    </form>
</div>

<script>
    $(document).ready(function ()
    {
        function UserModel(Password, newPassword1, newPassword2)
        {
            var self = this;
            self.Password = ko.observable(email);
            self.Password1 = ko.observable(firstName);
            self.Password2  = ko.observable(lastName);
            return self;
        }
        var userProfileModel = new UserModel('', '', '');

        var userProfileVm = function ()
        {
            var self = this;
            self.EditingModel = ko.observable();

            self.Edit = function (userModel)
            {
                //enable ko.editables before edit itself.
                ko.editable(userModel); 
                userModel.beginEdit();
                self.EditingModel(userModel);
            };

            self.Cancel = function ()
            {
                self.EditingModel().rollback();
                self.Edit(userProfileModel);
            };
        };        
        var userProfileVm = new userProfileVm();
        userProfileVm.Edit(userProfileModel);
        ko.applyBindings(userProfileVm, document.getElementById('UserPassId'));
    });
</script>

@EndSection
